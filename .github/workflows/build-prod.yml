name: Build and Push Prod Images
on:
  push:
    tags:
      - v*.*.*

jobs:
  build_and_push_frontend:
    if: contains(github.event.head_commit.message, 'frontend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push frontend_container
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:frontend_container
          build-args: |
            REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              в dockerhub был запушен новый образ frontend_container

  build_and_push_ndevops-alembic-1:
    if: contains(github.event.head_commit.message, 'init_db') || contains(github.event.head_commit.message, 'backend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push devops-alembic-1
        uses: docker/build-push-action@v2
        with:
          context: ./backend/init_db
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:to_do_list_devops-alembic-1
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              в dockerhub был запушен новый образ to_do_list_devops-alembic-1
              
  build_and_push_user_manager:
    if: contains(github.event.head_commit.message, 'user_manager') || contains(github.event.head_commit.message, 'backend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push user_manager_container
        uses: docker/build-push-action@v2
        with:
          context: ./backend/user_manager/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:user_manager_container
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              в dockerhub был запушен новый образ user_manager_container
            
  build_and_push_task_manager:
    if: contains(github.event.head_commit.message, 'task_manager') || contains(github.event.head_commit.message, 'backend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push task_manager_container
        uses: docker/build-push-action@v2
        with:
          context: ./backend/task_manager/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:task_manager_container
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              в dockerhub был запушен новый образ task_manager_container
  server_update:
    name: Update server by SSH
    runs-on: ubuntu-latest
    steps:
      - name: Connect and run script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script_stop: true
          script: |
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_HOST_TEST=${{ secrets.DB_HOST_TEST }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_NAME_TEST=${{ secrets.DB_NAME_TEST }}" >> .env
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
            echo "DB_PASS_TEST=${{ secrets.DB_PASS_TEST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_PORT_TEST=${{ secrets.DB_PORT_TEST }}" >> .env
            echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_USER_TEST=${{ secrets.DB_USER_TEST }}" >> .env
            echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" >> .env
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> .env
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> .env
            echo "SECRET=${{ secrets.SECRET }}" >> .env
            docker stop $(docker ps -qa) && docker rm $(docker ps -qa) && docker rmi -f $(docker images -qa) && docker volume rm $(docker volume ls -q) && docker network rm $(docker network ls -q)
            cd to_do_list_devops/
            docker compose pull
            docker compose up -d
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              Сервер был обновлен!
