name: Update Server
on:
  workflow_dispatch:
jobs:
  server_update:
    name: Update server by SSH
    runs-on: ubuntu-latest
    steps:
      - name: Connect and run script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script_stop: true
          script: |
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_HOST_TEST=${{ secrets.DB_HOST_TEST }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_NAME_TEST=${{ secrets.DB_NAME_TEST }}" >> .env
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
            echo "DB_PASS_TEST=${{ secrets.DB_PASS_TEST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_PORT_TEST=${{ secrets.DB_PORT_TEST }}" >> .env
            echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_USER_TEST=${{ secrets.DB_USER_TEST }}" >> .env
            echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" >> .env
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> .env
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> .env
            echo "SECRET=${{ secrets.SECRET }}" >> .env
            docker compose pull
            docker compose up -d
            docker rmi $(docker images -f "dangling=true" -q)
            
      - name: send telegram message on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
              Сервер был обновлен!
